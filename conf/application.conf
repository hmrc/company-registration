# Copyright 2017 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This is the main configuration file for the application.
# ~~~~~

appName=company-registration


# Define any modules used here
play.modules.enabled += "com.kenshoo.play.metrics.PlayModule"
play.modules.enabled += "play.modules.reactivemongo.ReactiveMongoHmrcModule"
play.modules.enabled += "config.Module"

#Required for object based play2.5 applications
play.http.requestHandler = "play.api.http.GlobalSettingsHttpRequestHandler"

# Session Timeout
# ~~~~
# The default session timeout for the app is 15 minutes (900seconds).
# Updating this is the responsibility of the app - it must issue a new cookie with each request or the session will
# timeout 15 minutes after login (regardless of user activity).
# session.maxAge=900

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret="MbLDSLdgXLohHB3KOMHqoi00tCeBpp1fUp5lQR190S0QKetyPdmpp0HNBszwJbsv"

# Session configuration
# ~~~~~
application.session.httpOnly=false

application.session.secure=false

# The application languages
# ~~~~~
application.langs="en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
application.global=config.MicroserviceGlobal
#play.http.filters = "config.filters.MicroserviceFilters"

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
application.router=prod.Routes


# Controller
# ~~~~~
# By default all controllers will have authorisation, logging and 
# auditing (transaction monitoring) enabled.
# The below controllers are the default exceptions to this rule.
#

controllers {
    # 300 is the default, you may need to change this according to your needs
    confidenceLevel = 300

    com.kenshoo.play.metrics.MetricsController = {
      needsAuth = false
      needsLogging = false
      needsAuditing = false
    }

    controllers.CorporationTaxRegistrationController = {
      needsAuth = false
      needsLogging = true
      needsAuditing = false
    }

    controllers.AccountingDetailsController = {
        needsAuth = false
        needsLogging = true
        needsAuditing = false
    }

    controllers.CompanyDetailsController = {
        needsAuth = false
        needsLogging = true
        needsAuditing = false
    }

    controllers.HeldController = {
        needsAuth = false
        needsLogging = true
        needsAuditing = false
    }

    controllers.TradingDetailsController = {
      needsAuth = false
      needsLogging = true
      needsAuditing = false
    }

    controllers.ContactDetailsController = {
        needsAuth = false
        needsLogging = true
        needsAuditing = false
    }

    controllers.UserAccessController = {
        needsAuth = false
        needsLogging = true
        needsAuditing = false
    }

    controllers.ProcessIncorporationsController = {
        needsAuth = false
        needsLogging = true
        needsAuditing = false
    }

    controllers.test.EmailController = {
        needsAuth = false
        needsLogging = true
        needsAuditing = false
    }

    controllers.test.TestEndpointController = {
        needsAuth = false
        needsLogging = true
        needsAuditing = false
    }

    controllers.PrepareAccountController = {
        needsAuth = false
        needsLogging = true
        needsAuditing = false
    }

    controllers.test.SubmissionCheckController = {
        needsAuth = false
        needsLogging = true
        needsAuditing = false
    }

    controllers.test.HeldSubmissionController = {
        needsAuth = false
        needsLogging = true
        needsAuditing = false
    }

    controllers.test.FeatureSwitchController = {
        needsAuth = false
        needsLogging = true
        needsAuditing = false
    }

    controllers.admin.AdminController = {
        needsAuth = false
        needsLogging = true
        needsAuditing = false
    }
}


# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/), by providing a logger.xml file in the conf directory .

# Root logger:
logger.root=ERROR

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=DEBUG

# Metrics plugin settings - graphite reporting is configured on a per env basis
metrics {
    name = ${appName}
    rateUnit = SECONDS
    durationUnit = SECONDS
    showSamples = true
    jvm = true
    enabled = true
}

auditing {
    enabled=true
    traceRequests=true
    consumer {
        baseUri {
            host = localhost
            port = 8100
        }
    }
}

# the value below is valid for local environment only
mongo-encryption.key = "MTIzNDU2Nzg5MDEyMzQ1Ng=="

# Microservice specific config

microservice {
    metrics {
        graphite {
            host = localhost
            port = 2003
            prefix = play.${appName}.
            enabled = false
        }
    }
}

Dev {
    mongodb {
        uri = "mongodb://localhost:27017/company-registration"
    }

    microservice {
        metrics {
            graphite {
                host = localhost
                port = 2003
                prefix = play.${appName}.
                enabled = false
            }
        }

        services {
            auth {
                host=localhost
                port=8500
            }

            business-registration {
                host = localhost
                port = 9660
            }
            //TODO this comp-reg-fe needs to be added to all the App Configs
            company-registration-frontend {
                host = localhost
                port = 9970
            }

            des-service {
                url = "http://localhost:9642/business-registration-dynamic-stub"
                host = localhost
                port = 9642
                environment = "local"
                authorization-token = "xxx-token-xxx"
            }
            email {
                sendEmailURL = "http://localhost:8300/hmrc/email"
            }

            throttle-threshold = 10

            check-submission-job {
                schedule {
                    initialDelay = 5seconds
                    interval = 10seconds
                    lockTimeout = 15minutes
                    blockage-logging-day = "MON,TUE,WED,THU,FRI"
                    blockage-logging-time = "08:00:00_17:00:00"
                }
            }

            address-line-4-fix {
              regId = "999"
              address-line-4 = "dGVzdEFMNA=="
            }
        }
    }

    auditing {
        enabled=true
        traceRequests=true
        consumer {
            baseUri {
                host = localhost
                port = 8100
            }
        }
    }
}

Test {

    mongodb {
        uri = "mongodb://localhost:27017/company-registration"
    }

    microservice {
        metrics {
            graphite {
                host = graphite
                port = 2003
                prefix = play.${appName}.
                enabled = false
            }
        }

        services {
            business-registration {
                host = localhost
                port = 9660
            }

            des-service {
                url = "http://localhost:9642/business-registration-dynamic-stub"
                host = localhost
                port = 9642
                environment = "local"
                authorization-token = "xxx-token-xxx"
            }

            company-registration-frontend {
                host = localhost
                port = 9970
            }
            email {
                sendEmailURL = "http://localhost:8300/hmrc/email"
            }

            throttle-threshold = 10

          check-submission-job {
            schedule {
              initialDelay = 5seconds
              interval = 10seconds
              lockTimeout = 15seconds
            }
          }
        }
    }

    auditing {
        enabled=true
        traceRequests=true
        consumer {
            baseUri {
                host = localhost
                port = 8100
            }
        }
    }
}

Prod {

    mongodb {
        uri = "mongodb://localhost:27017/company-registration"
    }

    microservice {
        metrics {
            graphite {
                host = graphite
                port = 2003
                prefix = play.${appName}.
                enabled = true
            }
        }

        services {
            email {
                sendEmailURL = "http://email.public.mdtp/hmrc/email"
            }
            check-submission-job {
                schedule {
                    blockage-logging-day = "MON,TUE,WED,THU,FRI"
                    blockage-logging-time = "08:00:00_17:00:00"
                }
            }
          address-line-4-fix {
            regId = "0"
            address-line-4 = "N/A"
          }

        }
    }

    auditing {
        enabled=true
        traceRequests=true
        consumer {
            baseUri {
                host = datastream.protected.mdtp
                port = 80
            }
        }
    }
}
