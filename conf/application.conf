# Copyright 2024 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This is the main configuration file for the application.
# ~~~~~

appName=company-registration

include "backend.conf"

# Json error handler
play.http.errorHandler = "uk.gov.hmrc.play.bootstrap.backend.http.JsonErrorHandler"


play.modules.enabled += "uk.gov.hmrc.mongo.play.PlayMongoModule"
play.modules.enabled += "config.Module"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuthModule"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientModule"

http-verbs.retries.ssl-engine-closed-already.enabled = true

# Session configuration
# ~~~~~
application.session.httpOnly=false

application.session.secure=false

# The application languages
# ~~~~~
application.langs="en"

# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
play.http.router=prod.Routes


# Controller
# ~~~~~
# By default all controllers will have authorisation, logging and
# auditing (transaction monitoring) enabled.
# The below controllers are the default exceptions to this rule.
#

controllers {
  # 300 is the default, you may need to change this according to your needs
  confidenceLevel = 300

  com.kenshoo.play.metrics.MetricsController = {
    needsLogging = false
    needsAuditing = false
  }

  controllers.CorporationTaxRegistrationController = {
    needsLogging = true
    needsAuditing = false
  }

  controllers.AccountingDetailsController = {
    needsLogging = true
    needsAuditing = false
  }

  controllers.CompanyDetailsController = {
    needsLogging = true
    needsAuditing = false
  }

  controllers.HeldController = {
    needsLogging = true
    needsAuditing = false
  }

  controllers.TradingDetailsController = {
    needsLogging = true
    needsAuditing = false
  }

  controllers.ContactDetailsController = {
    needsLogging = true
    needsAuditing = false
  }

  controllers.UserAccessController = {
    needsLogging = true
    needsAuditing = false
  }

  controllers.ProcessIncorporationsController = {
    needsLogging = true
    needsAuditing = false
  }

  controllers.EmailController = {
    needsLogging = true
    needsAuditing = false
  }

  controllers.test.TestEndpointController = {
    needsLogging = true
    needsAuditing = false
  }

  controllers.PrepareAccountController = {
    needsLogging = true
    needsAuditing = false
  }

  controllers.test.SubmissionCheckController = {
    needsLogging = true
    needsAuditing = false
  }

  controllers.test.HeldSubmissionController = {
    needsLogging = true
    needsAuditing = false
  }

  controllers.test.FeatureSwitchController = {
    needsLogging = true
    needsAuditing = false
  }

  controllers.admin.AdminController = {
    needsLogging = true
    needsAuditing = false
  }
}


# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/), by providing a logger.xml file in the conf directory .

# Root logger:
logger.root=ERROR

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=DEBUG



# Metrics plugin settings - graphite reporting is configured on a per env basis
metrics {
  enabled = true
}

# the value below is valid for local environment only
json.encryption.key = "MTIzNDU2Nzg5MDEyMzQ1Ng=="

# Microservice specific config
staleDocumentAmount = 1
clearAfterXDays = 90
microservice.services.skipStaleDocs = ""

akka.quartz {
  threadPool {
    threadCount = 1
    threadPriority = 5
    daemonThreads = true
  }
  defaultTimezone = UTC
}

mongodb {
  uri = "mongodb://localhost:27017/company-registration?rm.monitorRefreshMS=1000&rm.failover=default"
}

mongo-async-driver {
  akka {
    log-dead-letters-during-shutdown = off
    log-dead-letters = 0
    loglevel = WARNING
  }
}

microservice {
  services {

    alert-config {
      logging-day = "MON,TUE,WED,THU,FRI"
      logging-time = "09:00:00_18:00:00"
    }
    regime = "ctax"
    subscriber = "SCRS"
    doNotIndendToTradeDefaultDate = "MTkwMC0wMS0wMQ=="

    auth {
      host=localhost
      port=8500
    }
    business-registration {
      host = localhost
      port = 9660
    }

    company-registration-frontend {
      host = localhost
      port = 9970
    }
    company-registration {
      host        = localhost
      port        = 9973
      protocol    = http
    }

    des-service {
      url = "http://localhost:9642/business-registration-dynamic-stub"
      host = localhost
      port = 9642
      environment = "local"
      authorization-token = "xxx-token-xxx"
    }
    email {
      sendEmailURL = "http://localhost:8300/hmrc/email"
    }

    incorporation-information {
      host = localhost
      port = 9976
    }

    throttle-threshold = 10
    check-submission-job {
      schedule {
        blockage-logging-day = "MON,TUE,WED,THU,FRI"
        blockage-logging-time = "08:00:00_17:00:00"
      }
    }

    address-line-4-fix {
      regId = "999"
      address-line-4 = "dGVzdEFMNA=="
    }
  }
}
schedules.missing-incorporation-job {
  enabled          = false
  description     = "missing incoporation job"
  expression      = "0/12_0-59_0-23_?_*_*_*"  # run every 1440 minutes (12 seconds locally)
  lockTimeout     = 900
}

schedules.metrics-job {
  enabled          = false
  description     = "metrics job"
  expression      = "0/29_0-59_0-23_?_*_*_*"  # run every 180 minutes (29 seconds locally)
  lockTimeout     = 600
}
schedules.remove-stale-documents-job {
  enabled          = false
  description     = "remove stale documents job"
  expression      = "0/10_0-59_0-23_?_*_*_*"  # run every 180 minutes (10 seconds locally)
  lockTimeout     = 900
}

auditing {
  enabled=true
}
# 2024-03-31T23:00:00 is Midnight 1st April in BST
vat-threshold = [
  {
    "dateTime":"2017-04-01T00:00:00",
    "amount": 85000
  },
  {
    "dateTime":"2024-03-31T23:00:00",
    "amount": 90000
  }
]
list-of-takeover-regids = "cmVnSUQscmVnSUQyLHJlZ0lEMw=="
companyNameRegID = ""
list-of-regids = ""
list-of-ackrefs = ""
